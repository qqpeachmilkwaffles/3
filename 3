def func1(arg1, arg2):
    var35 = var5(arg1, arg2)
    var61 = func14(arg1, arg2)
    var62 = 396 + arg1 + -623
    var63 = var35 | arg1
    var64 = var35 - arg1
    if var63 < var64:
        var65 = var62 + (var63 ^ (arg1 - var62))
    else:
        var65 = (arg1 & var64 + var64) | -2105723719
    var66 = (var64 & var63 ^ var64) ^ var61
    var67 = var63 - arg1 & arg1
    var68 = var66 + arg2
    var69 = (arg2 & var61 - var63) & var63
    var70 = var67 ^ var64
    if var35 < arg1:
        var71 = arg2 | ((var62 + var69) ^ var64)
    else:
        var71 = arg1 - (var69 & var69) ^ var67
    var72 = (var70 - -1643681748) - var68 + var66
    var73 = (var70 + var70) | var68 | var63
    var74 = (var66 | var68) - var67
    result = var35 & var67
    return result
def func14(arg36, arg37):
    var38 = arg36 - arg37
    var39 = -346635622 ^ -731212017 - arg36 - 657
    var40 = var39 | (arg37 + var38) + arg36
    var41 = 449 & (var38 + -145 & arg37)
    var42 = var39 - var39 - -342
    var43 = var42 ^ (-402 + var42)
    var44 = arg37 + 852515468 | (-419 - var38)
    var45 = var42 ^ -695
    var46 = var39 & ((var42 - var42) | var40)
    var47 = var43 + (513 - arg37 + arg37)
    var48 = var38 - var46 | 944
    if var48 < var42:
        var49 = (arg37 ^ var47) & -305 & var44
    else:
        var49 = var39 ^ var42
    var50 = (var39 & var38 | var39) & var43
    var51 = (-572 + var38) | var50
    var52 = var40 + var42 + var43 & var39
    var53 = -137998574 & var38 & var40
    var54 = (var47 - var38 + var38) + var40
    var55 = var53 & var52
    var56 = arg37 + (var46 & (601 & var42))
    var57 = var56 - arg37
    var58 = var40 - (arg36 & 65)
    var59 = var55 ^ var41 & var44 | 304
    var60 = (var52 | var51) | var40 | var53
    result = 99 - var43
    return result
def func4(arg6, arg7):
    if arg7 < arg7:
        var12 = class5()
    else:
        var12 = class7()
    for var13 in func9(arg7, arg6):
        var26 = var12.func6
        var26(arg6, var13)
    if arg7 < arg7:
        var31 = class10()
    else:
        var31 = class12()
    for var32 in range(22):
        var31.func11(arg6, arg7)
    var33 = (arg7 ^ (arg7 ^ 433)) + arg7 | (arg6 & arg7)
    var34 = (arg7 ^ arg7) | ((arg7 + (2142529447 | ((1813667737 ^ -914825193) - -785)) - 413) | arg7)
    result = -560 - arg6
    return result
class class12(object):
    def func11(self, arg29, arg30):
        result = -1 - 551552217 ^ arg29
        return result
class class10(class12):
    def func11(self, arg27, arg28):
        result = arg28 & 0
        return result
def func9(arg14, arg15):
    var16 = arg14 + arg14
    yield var16
    var17 = 815 | arg14
    yield var17
    var18 = (1660157370 ^ var16) + arg15 - 868
    yield var18
    var19 = 1247530090 | (arg14 | 877)
    yield var19
    var20 = var17 ^ var18 | 1511548604 | 947
    yield var20
    var21 = -712574811 & (var16 - var17) ^ 123
    yield var21
    var22 = var19 | (var19 + var16) | var19
    yield var22
    var23 = var22 ^ var20 + var22
    yield var23
    var24 = (var23 - arg15 ^ var22) - var20
    yield var24
    var25 = (var19 + var24 & var24) | var22
    yield var25
class class7(object):
    def func6(self, arg10, arg11):
        result = (((954213460 | (2695507 + -939951462)) ^ 476042111 & 1387943523) - 17308178) ^ 1
        return result
class class5(object):
    def func6(self, arg8, arg9):
        result = (-905041321 - arg8) ^ 474518754 | arg8
        return result
def func3():
    closure = [2]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
